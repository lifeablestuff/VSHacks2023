/* google search bar

import { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';
  const [region, setRegion] = useState({
    latitude: 49.246292,
    longitude: -123.116226,
    latitudeDelta: 0.0922,
    longitudeDelta: 0.0421
  })
  <GooglePlacesAutocomplete
        placeholder="Search"
        fetchDetails={true}
        GooglePlacesSearchQuery={{
          rankby: "distance"
        }}
        onPress={(data, details = null) =>{
          console.log(data, details)
          setRegion({
            latitude: details.geometry.location.lat,
            longitude: details.geometry.location.lng,
            latitudeDelta: 0.0922,
            longitudeDelta: 0.0421
          })
        }}
        query={{
          key: 'AIzaSyBL9O1jIFA3akQULw3PFiPt6G34Ty3i69w',
          language: 'en',
          components: "country:ca",
          types: "(cities)",
          radius: 10,
          location: `${region.latitude}, ${region.longitude}`
        }}
        styles={{
          container: {
            flex: 0, 
            position: "absolute",
            width: "100%",
            zIndex: 1
          },
          listView: {
            backgroundColor: "black",
          }
        }}
      />
*/
/* basic code example
import React from 'react';
import { StatusBar } from 'expo-status-bar';
import { MapView, Button, Linking, StyleSheet, Text, View } from 'react-native';

export default function App() {
  const [fetchingData, setFetchingDataState ] = React.useState(true);
    setTimeout(() =>{
    setFetchingDataState(false);
  } , 1000);

  if (fetchingData){
      return <Loading />
    } else {
      return <Home />
  };
};

const Home = () => {
  return (
    <View style={styles.container}>
      <MapView style={styles.map} />
    </View>
  );
}

const Loading = () => {
  return (
    <View>
      <Text>
        Loading...
      </Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  map: {
    width: '100%',
    height: '100%',
  },
});
*/
/* custom marker at user location instead of default ios blue dot
  const [latitude, setLatitude] = useState({latitude: 0})
  const [longitude, setLongitude] = useState({longitude: 0})

  useEffect(() => {
    (async () => {
      let { status } = await Location.requestForegroundPermissionsAsync();
      if (status !== 'granted') {
        console.log('Permission to access location was denied');
        return;
      }
      location = await Location.getCurrentPositionAsync({});
      setLocation(location);
      setLatitude(location.coords.latitude)
      setLongitude(location.coords.longitude)
    })();
  }, []);

  
  const [location, setLocation] = useState();

  useEffect(() =>{
    const getPermission = async () => {  
      let {status} = await Location.requestForegroundPermissionAsync()
      if (status !== 'granted'){
        console.log('please grant location permissions!')
        return;
      } 
       let currentLocation = await Location.getCurrentPositionAsync({});
       setLocation(currentLocation);
       console.log(currentLocation);
    };
    getPermission();
  },[]);
 <Marker
            coordinate={{location}}>
            <Image style={styles.logo} source={require("./assets/appicon2.png")}/>
            <Callout><Text>You are here!</Text></Callout>
          </Marker>
          
  
  */
